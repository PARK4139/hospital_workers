version: '3.8'

services:
  # 로그인 서버 (인증 서비스) - 프로덕션 모드 최적화
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile.prod
      target: production
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@user-db:5432/hospital_workers
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=production
    depends_on:
      - user-db
      - redis
    networks:
      - hospital-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # API 서버 (비즈니스 로직) - 프로덕션 모드 최적화
  api-service:
    build:
      context: ./api-service
      dockerfile: Dockerfile.prod
      target: production
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@user-db:5432/hospital_workers
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:8000
      - ENVIRONMENT=production
    depends_on:
      - user-db
      - redis
      - auth-service
    networks:
      - hospital-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # 프론트엔드 서비스 - 프로덕션 모드
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    networks:
      - hospital-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # Nginx 리버스 프록시 - 프로덕션 모드 최적화
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf
    depends_on:
      - auth-service
      - api-service
      - frontend
    networks:
      - hospital-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # User DB (사용자 데이터베이스) - 프로덕션 모드 최적화
  user-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=hospital_workers
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - user_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - hospital-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'

  # Redis 캐시/세션 - 프로덕션 모드 최적화
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hospital-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

volumes:
  user_db_data:
  redis_data:

networks:
  hospital-network:
    driver: bridge
